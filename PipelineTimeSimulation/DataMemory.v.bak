module DataMemory 
#(parameter DATA_WIDTH = 32, parameter ADDR_WIDTH = 32)
(
	input [(DATA_WIDTH-1):0] data,
	input [(ADDR_WIDTH-1):0] addr,
	input [3:0] we, 
	input clk,
	output [(DATA_WIDTH-1):0] q
);

	// Declare the RAM variable
	reg [DATA_WIDTH-1:0] ram[2**(ADDR_WIDTH - 22) - 1:0];

	// Variable to hold the registered read address
	reg [ADDR_WIDTH-1:0] addr_reg;

	always @ (negedge clk)
	begin
		// Write
		if (we[0] == 1'b1)
			ram[addr[9:2]][7:0] <= data[7:0];
		if (we[1] == 1'b1)
			ram[addr[9:2]][15:8] <= data[15:8];
		if (we[2] == 1'b1)
			ram[addr[9:2]][23:16] <= data[23:16];
		if (we[3] == 1'b1)
			ram[addr[9:2]][31:24] <= data[31:24];
		//addr_reg <= addr;
	end		
	// Continuous assignment implies read returns NEW data.
	// This is the natural behavior of the TriMatrix memory
	// blocks in Single Port mode.  
	assign q = ram[addr[9:2]];

endmodule