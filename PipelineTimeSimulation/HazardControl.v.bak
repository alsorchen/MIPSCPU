module HazardControl(
input EX_MEM_Branch,
input Jump,
input MemWBSrc,//LoadUse From Control ID_EX
input RtRead,//Use Reg From Control IF_ID
input[4:0] Rs_From_IF_ID,Rt_From_IF_ID,
input[4:0] Rt_From_ID_EX,
output reg IF_ID_stall,ID_EX_stall,EX_MEM_stall,MEM_WB_stall,
output reg IF_ID_flush,ID_EX_flush,EX_MEM_flush,MEM_WB_flush,
output reg [2:0]PCSrc
);

//LoadUse Hazard
always@*
begin
	if(RtRead && MemWBSrc && ((Rt_From_ID_EX == Rs_From_IF_ID)||(Rt_From_ID_EX == Rt_From_IF_ID)))
	begin	
		ID_EX_stall <= 1'b0;
		EX_MEM_stall <= 1'b0;
		MEM_WB_stall <= 1'b0;
		IF_ID_stall <= 1'b1;
		IF_ID_flush <= 1'b0;
		ID_EX_flush <= 1'b1;
		EX_MEM_flush <= 1'b0;
		MEM_WB_flush <= 1'b0;
		PCSrc <= 3'b0;
	end
	if(Jump)
	begin
		IF_ID_stall <= 1'b0;
		ID_EX_stall <= 1'b0;
		EX_MEM_stall <= 1'b0;
		MEM_WB_stall <= 1'b0;
		IF_ID_flush <= 1'b0;
		ID_EX_flush <= 1'b1;
		EX_MEM_flush <= 1'b0;
		MEM_WB_flush <= 1'b0;
		PCSrc <= 3'b1;
	end
	if(EX_MEM_Branch)
	begin
		IF_ID_stall <= 1'b0;
		ID_EX_stall <= 1'b0;
		EX_MEM_stall <= 1'b0;
		MEM_WB_stall <= 1'b0;
		IF_ID_flush <= 1'b1;
		ID_EX_flush <= 1'b1;
		EX_MEM_flush <= 1'b1;
		MEM_WB_flush <= 1'b0;
		PCSrc <= 3'b2;
	end
	else
		PCSrc <= 3'b0;
end
endmodule